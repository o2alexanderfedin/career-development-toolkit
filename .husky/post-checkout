#!/bin/sh
. "$(dirname "$0")/_/husky.sh"

# Get current and previous branch
CURRENT_BRANCH=$(git symbolic-ref --short HEAD)
PREV_BRANCH=$1

# Skip if not a branch checkout (e.g., file checkout)
if [ -z "$CURRENT_BRANCH" ]; then
    exit 0
fi

# GitFlow branch prefixes
FEATURE_PREFIX="feature/"
BUGFIX_PREFIX="bugfix/"
RELEASE_PREFIX="release/"
HOTFIX_PREFIX="hotfix/"
SUPPORT_PREFIX="support/"

# Colors for output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo "${BLUE}----------------------------------------${NC}"
echo "${BLUE}ðŸ”„ GitFlow Reminder${NC}"
echo "${BLUE}----------------------------------------${NC}"

# Remind about GitFlow operations based on current branch
if [ "$CURRENT_BRANCH" = "develop" ]; then
    echo "${GREEN}âœ… On develop branch${NC}"
    echo "${YELLOW}Recommended actions:${NC}"
    echo "  - To start a new feature: ${GREEN}git flow feature start <name>${NC}"
    echo "  - To start a new release: ${GREEN}git flow release start <version>${NC}"
    
elif [ "$CURRENT_BRANCH" = "main" ]; then
    echo "${GREEN}âœ… On main branch${NC}"
    echo "${YELLOW}Recommended actions:${NC}"
    echo "  - To fix a production issue: ${GREEN}git flow hotfix start <version>${NC}"
    echo "  - For normal development: ${GREEN}git checkout develop${NC}"
    
elif [[ $CURRENT_BRANCH == $FEATURE_PREFIX* ]]; then
    feature_name=${CURRENT_BRANCH#"$FEATURE_PREFIX"}
    echo "${GREEN}âœ… On feature branch: ${feature_name}${NC}"
    echo "${YELLOW}When finished:${NC}"
    echo "  - Commit your changes: ${GREEN}git commit -m \"feat: your message\"${NC}"
    echo "  - Finish the feature: ${GREEN}git flow feature finish ${feature_name}${NC}"
    
elif [[ $CURRENT_BRANCH == $RELEASE_PREFIX* ]]; then
    release_version=${CURRENT_BRANCH#"$RELEASE_PREFIX"}
    echo "${GREEN}âœ… On release branch: ${release_version}${NC}"
    echo "${YELLOW}When finished:${NC}"
    echo "  - Only fix bugs, update docs, or prepare release"
    echo "  - Finish the release: ${GREEN}git flow release finish ${release_version}${NC}"
    
elif [[ $CURRENT_BRANCH == $HOTFIX_PREFIX* ]]; then
    hotfix_version=${CURRENT_BRANCH#"$HOTFIX_PREFIX"}
    echo "${GREEN}âœ… On hotfix branch: ${hotfix_version}${NC}"
    echo "${YELLOW}When finished:${NC}"
    echo "  - Fix the critical issue only"
    echo "  - Finish the hotfix: ${GREEN}git flow hotfix finish ${hotfix_version}${NC}"
fi

echo "${BLUE}----------------------------------------${NC}"