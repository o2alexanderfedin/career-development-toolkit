#!/bin/sh
. "$(dirname "$0")/_/husky.sh"

# Check if this is a merge commit (has more than one parent)
PARENTS=$(git log -1 --pretty=%P | wc -w)

if [ "$PARENTS" -gt 1 ]; then
    # Get the branch name
    BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)
    
    # Only trigger for develop branch
    if [ "$BRANCH_NAME" = "develop" ]; then
        # Check commit message for conflict resolution indicators
        COMMIT_MSG=$(git log -1 --pretty=%B)
        if echo "$COMMIT_MSG" | grep -q -i "conflict\|resolve\|fix merge"; then
            # Colors for output
            GREEN='\033[0;32m'
            YELLOW='\033[1;33m'
            BLUE='\033[0;34m'
            RED='\033[0;31m'
            NC='\033[0m' # No Color
            
            echo "${YELLOW}You've just resolved merge conflicts.${NC}"
            
            # Use the pm_decision script to determine if post-mortem is needed
            TEMPLATE_CMD="cp .claude/templates/post_mortem_template.md .claude/post_mortems/code/$(date +%Y-%m-%d)_merge-conflict-resolution.md"
            $(dirname "$0")/../scripts/pm_decision.sh "Merge Conflict Resolution Detected" "merge conflict resolution" "$TEMPLATE_CMD"
        fi
    fi
fi